{"version":3,"sources":["../src/index.js"],"names":["mismatch","re","string","keys","m","replace","match","args","p","slice","length","o","reduce","acc","capturedGroup","i","key","push"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBe,SAASA,QAAT,CAAkBC,EAAlB,EAAsBC,MAAtB,EAA8BC,IAA9B,EAAoC;AACjD;AACA,QAAMC,IAAI,EAAV;AACAF,SAAOG,OAAP,CAAeJ,EAAf,EAAmB,CAACK,KAAD,EAAQ,GAAGC,IAAX,KAAoB;AACrC,UAAMC,IAAID,KAAKE,KAAL,CAAW,CAAX,EAAcF,KAAKG,MAAL,GAAc,CAA5B,CAAV,CADqC,CACI;;AACzC,UAAMC,IAAIH,EAAEI,MAAF,CAAS,CAACC,GAAD,EAAMC,aAAN,EAAqBC,CAArB,KAA2B;AAC5C,YAAMC,MAAMb,KAAKY,CAAL,CAAZ;AACA,UAAI,EAAEC,OAAOF,aAAT,CAAJ,EAA6B,OAAOD,GAAP;AAC7BA,UAAIG,GAAJ,IAAWF,aAAX;AACA,aAAOD,GAAP;AACD,KALS,EAKP,EALO,CAAV;AAMAT,MAAEa,IAAF,CAAON,CAAP;AACD,GATD;AAUA,SAAOP,CAAP;AACD","sourcesContent":["/**\n * Returns an array of captured groups of a regular expression as objects. Does not modify the `lastIndex` property of the regex.\n * @param {RegExp} re The regular expression used for matching.\n * @param {string} string String to find matches in.\n * @param {string[]} keys Keys to use to create an captured group object.\n * @example\n *\n * const re = /(test) inside of a (string)(\\d)?/ig\n * const s = 'Test inside of a STRING1. TEST inside of a string.'\n * const keys = ['test', 'string', 'number']\n * const res = mismatch(re, s, keys)\n *\n * // result:\n * [\n *  {\n *    test: 'Test',\n *    string: 'STRING',\n *    number: '1',\n *  },\n *  {\n *    test: 'TEST',\n *    string: 'string',\n *  },\n * ]\n */\nexport default function mismatch(re, string, keys) {\n  /** @type {Object.<string, string>[]} */\n  const m = []\n  string.replace(re, (match, ...args) => {\n    const p = args.slice(0, args.length - 2) // remove position and input\n    const o = p.reduce((acc, capturedGroup, i) => {\n      const key = keys[i]\n      if (!(key && capturedGroup)) return acc\n      acc[key] = capturedGroup\n      return acc\n    }, {})\n    m.push(o)\n  })\n  return m\n}"],"file":"index.js"}